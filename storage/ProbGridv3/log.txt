/Users/srahmoun/Documents/Thesis/dio/rl-starter-files/scripts/train.py --algo ppo --env MiniGrid-ProbGrid-8x8-v0 --model ProbGridv3 --frames 80000 --save-interval 10

Namespace(algo='ppo', batch_size=256, clip_eps=0.2, discount=0.99, entropy_coef=0.01, env='MiniGrid-ProbGrid-8x8-v0', epochs=4, frames=80000, frames_per_proc=None, gae_lambda=0.95, log_interval=1, lr=0.001, max_grad_norm=0.5, mem=False, model='ProbGridv3', optim_alpha=0.99, optim_eps=1e-08, procs=16, recurrence=1, save_interval=10, seed=1, text=False, value_loss_coef=0.5)

Device: cpu

Grounding: 0.0043s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0133s
Grounding: 0.0045s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0105s
Grounding: 0.0042s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0112s
Grounding: 0.0041s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0112s
Grounding: 0.0048s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0100s
Grounding: 0.0041s
Cycle breaking: 0.0002s
Clark's completion: 0.0000s
DSharp compilation: 0.0105s
Grounding: 0.0040s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0111s
Grounding: 0.0043s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0105s
Grounding: 0.0041s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0105s
Grounding: 0.0041s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0101s
Grounding: 0.0042s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0105s
Grounding: 0.0045s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0109s
Grounding: 0.0042s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0104s
Grounding: 0.0041s
Cycle breaking: 0.0002s
Clark's completion: 0.0000s
DSharp compilation: 0.0115s
Grounding: 0.0040s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0114s
Grounding: 0.0043s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0113s
Environments loaded

Training status loaded

Observations preprocessor loaded
Model loaded

ACModel(
  (image_conv): Sequential(
    (0): Conv2d(3, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (actor): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=3, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

Optimizer loaded

/Users/srahmoun/Documents/Thesis/dio/rl-starter-files/scripts/train.py --algo ppo --env MiniGrid-ProbGrid-8x8-v0 --model ProbGridv3 --frames 80000 --save-interval 10

Namespace(algo='ppo', batch_size=256, clip_eps=0.2, discount=0.99, entropy_coef=0.01, env='MiniGrid-ProbGrid-8x8-v0', epochs=4, frames=80000, frames_per_proc=None, gae_lambda=0.95, log_interval=1, lr=0.001, max_grad_norm=0.5, mem=False, model='ProbGridv3', optim_alpha=0.99, optim_eps=1e-08, procs=16, recurrence=1, save_interval=10, seed=1, text=False, value_loss_coef=0.5)

Device: cpu

Grounding: 0.0042s
Cycle breaking: 0.0002s
Clark's completion: 0.0000s
DSharp compilation: 0.0228s
Grounding: 0.0041s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0105s
Grounding: 0.0043s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0105s
Grounding: 0.0041s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0126s
Grounding: 0.0048s
Cycle breaking: 0.0002s
Clark's completion: 0.0000s
DSharp compilation: 0.0283s
Grounding: 0.0047s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0111s
Grounding: 0.0049s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0108s
Grounding: 0.0040s
Cycle breaking: 0.0002s
Clark's completion: 0.0000s
DSharp compilation: 0.0107s
Grounding: 0.0048s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0109s
Grounding: 0.0041s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0118s
Grounding: 0.0040s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0112s
Grounding: 0.0047s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0107s
Grounding: 0.0040s
Cycle breaking: 0.0002s
Clark's completion: 0.0000s
DSharp compilation: 0.0117s
Grounding: 0.0042s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0113s
Grounding: 0.0040s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0110s
Grounding: 0.0267s
Cycle breaking: 0.0001s
Clark's completion: 0.0000s
DSharp compilation: 0.0114s
Environments loaded

Training status loaded

Observations preprocessor loaded
Model loaded

ACModel(
  (image_conv): Sequential(
    (0): Conv2d(3, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (actor): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=3, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

Optimizer loaded

/Users/srahmoun/Documents/Thesis/dio/rl-starter-files/scripts/train.py --algo ppo --env MiniGrid-ProbGrid-8x8-v0 --model ProbGridv3 --frames 80000 --save-interval 10

Namespace(algo='ppo', batch_size=256, clip_eps=0.2, discount=0.99, entropy_coef=0.01, env='MiniGrid-ProbGrid-8x8-v0', epochs=4, frames=80000, frames_per_proc=None, gae_lambda=0.95, log_interval=1, lr=0.001, max_grad_norm=0.5, mem=False, model='ProbGridv3', optim_alpha=0.99, optim_eps=1e-08, procs=16, recurrence=1, save_interval=10, seed=1, text=False, value_loss_coef=0.5)

Device: cpu

/Users/srahmoun/Documents/Thesis/dio/rl-starter-files/scripts/train.py --algo ppo --env MiniGrid-ProbGrid-8x8-v0 --model ProbGridv3 --frames 80000 --save-interval 10

Namespace(algo='ppo', batch_size=256, clip_eps=0.2, discount=0.99, entropy_coef=0.01, env='MiniGrid-ProbGrid-8x8-v0', epochs=4, frames=80000, frames_per_proc=None, gae_lambda=0.95, log_interval=1, lr=0.001, max_grad_norm=0.5, mem=False, model='ProbGridv3', optim_alpha=0.99, optim_eps=1e-08, procs=16, recurrence=1, save_interval=10, seed=1, text=False, value_loss_coef=0.5)

Device: cpu

/Users/srahmoun/Documents/Thesis/dio/rl-starter-files/scripts/train.py --algo ppo --env MiniGrid-ProbGrid-8x8-v0 --model ProbGridv3 --frames 80000 --save-interval 10

Namespace(algo='ppo', batch_size=256, clip_eps=0.2, discount=0.99, entropy_coef=0.01, env='MiniGrid-ProbGrid-8x8-v0', epochs=4, frames=80000, frames_per_proc=None, gae_lambda=0.95, log_interval=1, lr=0.001, max_grad_norm=0.5, mem=False, model='ProbGridv3', optim_alpha=0.99, optim_eps=1e-08, procs=16, recurrence=1, save_interval=10, seed=1, text=False, value_loss_coef=0.5)

Device: cpu

/Users/srahmoun/Documents/Thesis/dio/rl-starter-files/scripts/train.py --algo ppo --env MiniGrid-ProbGrid-8x8-v0 --model ProbGridv3 --frames 80000 --save-interval 10

Namespace(algo='ppo', batch_size=256, clip_eps=0.2, discount=0.99, entropy_coef=0.01, env='MiniGrid-ProbGrid-8x8-v0', epochs=4, frames=80000, frames_per_proc=None, gae_lambda=0.95, log_interval=1, lr=0.001, max_grad_norm=0.5, mem=False, model='ProbGridv3', optim_alpha=0.99, optim_eps=1e-08, procs=16, recurrence=1, save_interval=10, seed=1, text=False, value_loss_coef=0.5)

Device: cpu

Environments loaded

Training status loaded

Observations preprocessor loaded
Model loaded

ACModel(
  (image_conv): Sequential(
    (0): Conv2d(3, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (actor): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=3, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

